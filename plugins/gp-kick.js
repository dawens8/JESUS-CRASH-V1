const { cmd } = require('../command');

cmd({
    pattern: "remove",
    alias: ["kick", "k"],
    desc: "Removes a member from the group",
    category: "group",
    react: "üß®",
    filename: __filename
},
async (conn, mek, m, {
    from, q, isGroup, isBotAdmins, reply, quoted, senderNumber
}) => {
    // Check if the command is used in a group
    if (!isGroup) return reply("*_‚ùå ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥Ñ·¥Ä…¥ ·¥è…¥ ü è  ô·¥á ·¥ús·¥á·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥òs_*");

    // Get the bot owner's number dynamically from conn.user.id
    const botOwner = conn.user.id.split(":")[0];
    if (senderNumber !== botOwner) {
        return reply("*_‚ùå ·¥è…¥ ü è ·¥õ ú·¥á  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö_*");
    }

    // Check if the bot is an admin
    if (!isBotAdmins) return reply("*_‚ùå …™ …¥·¥á·¥á·¥Ö ·¥õ·¥è  ô·¥á ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö_*");

    let number;
    if (m.quoted) {
        number = m.quoted.sender.split("@")[0]; // If replying to a message, get the sender's number
    } else if (q && q.includes("@")) {
        number = q.replace(/[@\s]/g, ''); // If mentioning a user
    } else {
        return reply("*_‚ùå ·¥ò ü·¥á·¥Äs·¥á  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä ·¥ç·¥á…¥·¥õ…™·¥è…¥ ·¥Ä ·¥ús·¥á Ä ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á_*");
    }

    const jid = number + "@s.whatsapp.net";

    try {
        await conn.groupParticipantsUpdate(from, [jid], "remove");
        reply(`*‚úÖ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è  Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö @${number}*`, { mentions: [jid] });
    } catch (error) {
        console.error("Remove command error:", error);
        reply("*_‚ùå “ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á ·¥õ ú·¥á ·¥ç·¥á·¥ç ô·¥á Ä_*");
    }
});
