const { cmd } = require('../command');
const config = require('../config');

cmd({
    pattern: "kickallfast",
    alias: ["kickall", "kickrush"],
    desc: "*‚ö°  Ä·¥á·¥ç·¥è·¥†·¥á ·¥Ä ü ü …¥·¥è…¥-·¥Ä·¥Ö·¥ç…™…¥ ·¥ç·¥á·¥ç ô·¥á Äs ·¥ç·¥è·¥ç·¥á…¥·¥õ·¥Ä…¥·¥á·¥ç·¥á…¥·¥õ*",
    react: "üí£",
    category: "group",
    filename: __filename,
}, 
async (conn, mek, m, {
    from, isGroup, senderNumber, groupMetadata, groupAdmins, isBotAdmins, reply
}) => {
    try {
        if (!isGroup) return reply("*üìõ ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥Ñ·¥Ä…¥ ·¥è…¥ ü è  ô·¥á ·¥ús·¥á·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥òs*");
        const botOwner = conn.user.id.split(":")[0];
        if (senderNumber !== botOwner) return reply("*‚õî ·¥è…¥ ü è ·¥õ ú·¥á  ô·¥è·¥õ ·¥è·¥°…¥·¥á Ä ·¥è Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö*");
        if (!isBotAdmins) return reply("*ü§ñ …™ …¥·¥á·¥á·¥Ö ·¥õ·¥è  ô·¥á ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ ·¥õ·¥è ·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö*");

        const allParticipants = groupMetadata.participants;
        const botJid = conn.user.id;
        const nonAdmins = allParticipants
            .filter(p => !groupAdmins.includes(p.id) && p.id !== botJid);

        if (nonAdmins.length === 0) return reply("*‚ÑπÔ∏è …¥·¥è ·¥ç·¥á·¥ç ô·¥á Äs ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á “ì Ä·¥è·¥ç ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò*");

        const idsToKick = nonAdmins.map(p => p.id);
        await conn.groupParticipantsUpdate(from, idsToKick, "remove");

        reply(`*‚úÖ ${idsToKick.length} ·¥ç·¥á·¥ç ô Ä·¥ás ·¥áx·¥ò·¥ú üs·¥áÃÅs ·¥Ö·¥ú …¢ Ä·¥è·¥ú·¥ò·¥á ${groupMetadata.subject} ·¥á…¥ 1 s·¥á·¥Ñ·¥è…¥·¥Ö·¥á*`);
    } catch (err) {
        console.error("Erreur dans kickallfast:", err);
        reply("*‚ö†Ô∏è ·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥á·¥Ö ·¥° ú…™ ü·¥á ·¥õ Ä è…™…¥…¢ ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á …¥·¥è…¥-·¥Ä·¥Ö·¥ç…™…¥ ·¥ç·¥á·¥ç ô·¥á Äs. ·¥ò ü·¥á·¥Äs·¥á ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥*");
    }
});
